// base16-telegram by theova (https://github.com/theova/base16-telegram)
// {{scheme-name}} scheme by {{scheme-author}}

// base16 colors
base00: #{{base00-hex}};
base01: #{{base01-hex}};
base02: #{{base02-hex}};
base03: #{{base03-hex}};
base04: #{{base04-hex}};
base05: #{{base05-hex}};
base06: #{{base06-hex}};
base07: #{{base07-hex}};
base08: #{{base08-hex}};
base09: #{{base09-hex}};
base0A: #{{base0A-hex}};
base0B: #{{base0B-hex}};
base0C: #{{base0C-hex}};
base0D: #{{base0D-hex}};
base0E: #{{base0E-hex}};
base0F: #{{base0F-hex}};

// base16 with transparency
base00T: #{{base00-hex}}cc;
base01T: #{{base01-hex}}cc;
base02T: #{{base02-hex}}cc;
base03T: #{{base03-hex}}cc;
base04T: #{{base04-hex}}cc;
base05T: #{{base05-hex}}cc;
base06T: #{{base06-hex}}cc;
base07T: #{{base07-hex}}cc;
base08T: #{{base08-hex}}cc;
base09T: #{{base09-hex}}cc;
base0AT: #{{base0A-hex}}cc;
base0BT: #{{base0B-hex}}cc;
base0CT: #{{base0C-hex}}cc;
base0DT: #{{base0D-hex}}cc;
base0ET: #{{base0E-hex}}cc;
base0FT: #{{base0F-hex}}cc;

// Themix/Oomox theme:
themixACCENT_BG: #{{themix_ACCENT_BG-hex}};
themixBG: #{{themix_BG-hex}};
themixBTN_BG: #{{themix_BTN_BG-hex}};
themixBTN_FG: #{{themix_BTN_FG-hex}};
themixCARET1_FG: #{{themix_CARET1_FG-hex}};
themixCARET2_FG: #{{themix_CARET2_FG-hex}};
themixFG: #{{themix_FG-hex}};
themixHDR_BG: #{{themix_HDR_BG-hex}};
themixHDR_BTN_BG: #{{themix_HDR_BTN_BG-hex}};
themixHDR_BTN_FG: #{{themix_HDR_BTN_FG-hex}};
themixHDR_FG: #{{themix_HDR_FG-hex}};
themixICONS_ARCHDROID: #{{themix_ICONS_ARCHDROID-hex}};
themixICONS_DARK: #{{themix_ICONS_DARK-hex}};
themixICONS_LIGHT: #{{themix_ICONS_LIGHT-hex}};
themixICONS_LIGHT_FOLDER: #{{themix_ICONS_LIGHT_FOLDER-hex}};
themixICONS_MEDIUM: #{{themix_ICONS_MEDIUM-hex}};
themixICONS_SYMBOLIC_ACTION: #{{themix_ICONS_SYMBOLIC_ACTION-hex}};
themixICONS_SYMBOLIC_PANEL: #{{themix_ICONS_SYMBOLIC_PANEL-hex}};
themixMENU_BG: #{{themix_MENU_BG-hex}};
themixMENU_FG: #{{themix_MENU_FG-hex}};
themixSEL_BG: #{{themix_SEL_BG-hex}};
themixSEL_FG: #{{themix_SEL_FG-hex}};
themixSPOTIFY_PROTO_BG: #{{themix_SPOTIFY_PROTO_BG-hex}};
themixSPOTIFY_PROTO_FG: #{{themix_SPOTIFY_PROTO_FG-hex}};
themixSPOTIFY_PROTO_SEL: #{{themix_SPOTIFY_PROTO_SEL-hex}};
themixSURUPLUS_GRADIENT1: #{{themix_SURUPLUS_GRADIENT1-hex}};
themixSURUPLUS_GRADIENT2: #{{themix_SURUPLUS_GRADIENT2-hex}};
themixTXT_BG: #{{themix_TXT_BG-hex}};
themixTXT_FG: #{{themix_TXT_FG-hex}};
themixWM_BORDER_FOCUS: #{{themix_WM_BORDER_FOCUS-hex}};
themixWM_BORDER_UNFOCUS: #{{themix_WM_BORDER_UNFOCUS-hex}};


// Color Pallete
pBg: themixBG;
pFg: themixFG;
pSelection: themixSEL_BG;
pSelectionFg: themixSEL_FG;
pButton: themixBTN_BG;
pButtonFg: themixBTN_FG;
pComment: base03;
pCyan: base0C;
pGreen: base0B;
pOrange: base09;
pPink: base0E;
pPurple: base0D;
pRed: base08;
pYellow: base0A;
pAnthracite: base03;


// Color Vars
rippleBgHeavy: pComment;
rippleBgLight: themixTXT_BG;
cBlack: base00;
cWhite: base05;
cTransparent: #00000000;

windowBg: pBg; // Main bg
windowFg: pFg; // Text color etc.
windowBgOver: rippleBgLight; // Generic bg hover color (random bits and pieces) & Search bar bg
windowBgRipple: rippleBgHeavy; // Ripple color (on hover colored items) [te]
windowFgOver: windowFg; // Text color on hover
windowSubTextFg: pComment; // Minor text and some labels (version number, last seen, etc.)
windowSubTextFgOver: pPurple; // Hotkey hover text color?
windowBoldFg: pFg; // Bolded text (headers) [te]
windowBoldFgOver: windowBoldFg; // windowBoldFg but on hover (idk where used)
windowBgActive: themixACCENT_BG; // Checked radio and checkbox color
windowFgActive: themixBTN_FG; // Button Text [te]
windowActiveTextBg: pSelectionFg; // Hyperlink text color (and text input active labels)
windowActiveTextFg: pPurple; // Hyperlink text color (and text input active labels)
windowShadowFg: #000000f0; // [te]
windowShadowFgFallback: cBlack; // [te]
shadowFg: cTransparent; // [te]

slideFadeOutBg: windowFg; // ???
slideFadeOutShadowFg: cTransparent; // ??? [te]

activeButtonBgOver: pPurple;  // Raised Button hover bg
activeButtonBg: pButton; // Raised Button bg
activeButtonBgRipple: rippleBgHeavy; // Raised Button ripple color (and slected chat contact ripple?)
activeButtonFgOver: activeButtonFg; // Raised Button hover text color
activeButtonFg: pButtonFg; // Raised Button text color
activeButtonSecondaryFgOver: activeButtonSecondaryFg; // activeButtonSecondaryFg on hover
activeButtonSecondaryFg: pSelection; // Numbers (badges) text color on raised buttons
activeLineFgError: pRed; // activeLineFg but on error
activeLineFg: windowActiveTextFg; // Active text input bottom border color

attentionButtonBgOver: base08T; // Warning button bg color hover !!(pRed with transparency)!! [te]
attentionButtonBgRipple: rippleBgLight; // Warning button ripple color
attentionButtonFgOver: attentionButtonFg; // Warning button text color hover
attentionButtonFg: pRed; // Warning button text color

outlineButtonBgOver: pSelection; // Outline Button bg on hover [te]
outlineButtonBg: pButton; // Outline Button bg
outlineButtonBgRipple: rippleBgLight;  // Outline Button ripple color
outlineButtonOutlineFg: pButtonFg; // Outline Button indicator color

lightButtonBgOver: pSelection; // Flat button bg color on hover
lightButtonBg: pButton; // Flat button bg color
lightButtonBgRipple: rippleBgLight; // Flat button ripple color
lightButtonFgOver: activeButtonBgOver; // Flat button text color on hover
lightButtonFg: pButtonFg; // Flat button text color [te]

boxBg: windowBg;
boxSearchBg: boxBg;
boxSearchCancelIconFg: cancelIconFg;
boxSearchCancelIconFgOver: cancelIconFgOver;
boxTextFgError: pRed;
boxTextFgGood: pGreen;
boxTextFg: windowFg;
boxTitleAdditionalFg: boxTextFg; // [te]
boxTitleCloseFg: cancelIconFg;
boxTitleCloseFgOver: cancelIconFgOver;
boxTitleFg: cWhite;

cancelIconFg: menuIconFg; // Main close menu color (like option close)
cancelIconFgOver: pRed; // & on hover [te]

checkboxFg: pComment; // checkbox inactive border [te]

contactsBgOver: windowBgOver;
contactsBg: windowBg; // Contact bg color on contacts page
contactsNameFg: pSelection; // Contact name color on contacts page [te]
contactsStatusFgOnline: windowActiveTextFg;
contactsStatusFgOver: windowSubTextFgOver;
contactsStatusFg: windowSubTextFg; // Contact status color on contacts page

dialogsBgActive: pSelection;
dialogsBgOver: windowBgOver;
dialogsBg: windowBg;
dialogsChatIconFgActive: pPurple;
dialogsChatIconFgOver: dialogsChatIconFg;
dialogsChatIconFg: pOrange; // [te]
dialogsDateFgActive: windowActiveTextFg;
dialogsDateFgOver: windowSubTextFgOver;
dialogsDateFg: windowSubTextFg;
dialogsDraftFgActive: dialogsDraftFg;
dialogsDraftFgOver: dialogsDraftFg;
dialogsDraftFg: pRed; // Draft label color
dialogsForwardBg: dialogsBgActive;
dialogsForwardFg: pCyan; // [te]
dialogsMenuIconFg: menuIconFg; // menu hamburger color
dialogsMenuIconFgOver: menuIconFgOver;
dialogsNameFgActive: pPink;
dialogsNameFgOver: windowBoldFgOver;
dialogsNameFg: windowBoldFg; // Chat names color
dialogsSendingIconFgActive: dialogsSendingIconFg;
dialogsSendingIconFgOver: dialogsSendingIconFg;
dialogsSendingIconFg: pOrange; // ??? little clock icon on chat contact (the ones on left sidebar) when sending
dialogsSentIconFgActive: dialogsSentIconFg;
dialogsSentIconFgOver: dialogsSentIconFg;
dialogsSentIconFg: pGreen;
dialogsTextFgActive: windowActiveTextFg;
dialogsTextFgOver: windowSubTextFgOver;
dialogsTextFgServiceActive: pOrange; // [te]
dialogsTextFgServiceOver: dialogsTextFgService;
dialogsTextFgService: windowActiveTextFg;
dialogsTextFg: windowSubTextFg;
dialogsUnreadBgActive: dialogsUnreadBg;
dialogsUnreadBgMutedActive: dialogsUnreadBgMuted;
dialogsUnreadBgMutedOver: dialogsUnreadBgMuted;
dialogsUnreadBgMuted: pSelection; // [te]
dialogsUnreadBgOver: dialogsUnreadBg;
dialogsUnreadBg: pComment; // [te]
dialogsUnreadFgActive: dialogsUnreadFg;
dialogsUnreadFgOver: dialogsUnreadFg;
dialogsUnreadFg: pFg; // [te]
dialogsVerifiedIconBgActive: dialogsVerifiedIconBg;
dialogsVerifiedIconBgOver: dialogsVerifiedIconBg;
dialogsVerifiedIconBg: pCyan; // verified icon bg [te]
dialogsVerifiedIconFgActive: dialogsVerifiedIconFg;
dialogsVerifiedIconFgOver: dialogsVerifiedIconFg;
dialogsVerifiedIconFg: pBg; // verified icon text color [te]

emojiPanBg: windowBg; // Emoji window bg
emojiPanCategories: emojiPanBg;
emojiPanHeaderBg: emojiPanBg;
emojiPanHeaderFg: windowSubTextFg;

filterInputBorderFg: pComment; // Search box active border
filterInputInactiveBg: base01T; // [te]

historyCaptionInFg: historyTextInFg;
historyCaptionOutFg: historyTextOutFg;
historyComposeAreaBg: themixTXT_BG;
historyComposeAreaFg: themixTXT_FG;
historyComposeAreaFgService: pFg; // [te]
historyComposeButtonBg: historyComposeAreaBg;
historyComposeButtonBgOver: windowBgOver;
historyComposeButtonBgRipple: windowBgRipple;
historyComposeIconFg: menuIconFg; // Bottom chat icons (Attach File, Emoji, Microphone)
historyComposeIconFgOver: menuIconFgOver;
historyFileNameInFg: historyTextInFg;
historyFileNameOutFg: historyTextOutFg;
historyForwardChooseBg: pComment;
historyForwardChooseFg: cWhite;
historyIconFgInverted: pGreen; // [te]
historyOutIconFg: pGreen;
historyOutIconFgSelected: pGreen;
historyPeer1NameFg: pRed; // [te]
historyPeer1UserpicBg: pRed; // [te]
historyPeer2NameFg: pGreen; // [te]
historyPeer2UserpicBg: pGreen; // [te]
historyPeer3NameFg: pYellow; // [te]
historyPeer3UserpicBg: pYellow; // [te]
historyPeer4NameFg: pCyan; // [te]
historyPeer4UserpicBg: pCyan; // [te]
historyPeer5NameFg: pPurple; // [te]
historyPeer5UserpicBg: pPurple; // [te]
historyPeer6NameFg: pPink; // [te]
historyPeer6UserpicBg: pPink; // [te]
historyPeer7NameFg: pAnthracite; // [te]
historyPeer7UserpicBg: pAnthracite; // [te]
historyPeer8NameFg: pOrange; // [te]
historyPeer8UserpicBg: pOrange; // [te]
historyPeerUserpicFg: pBg; //  [te]
historyPinnedBg: windowBg;
historyReplyBg: historyComposeAreaBg;
historyReplyCancelFg: cancelIconFg;
historyReplyCancelFgOver: pRed; // [te]
historyReplyIconFg: windowBgActive;
historyScrollBarBgOver: scrollBarBgOver;
historyScrollBarBg: scrollBarBg;
historyScrollBgOver: scrollBgOver;
historyScrollBg: scrollBg;
historySendIconFg: menuIconFg; // Paper plane icon that shows when text is typed (click to send)
historySendIconFgOver: pGreen; // [te]
historySendingInIconFg: pOrange; // [te]
historySendingInvertedIconFg: pOrange; // little 'eye' icon on some media msgs (ie sticker, image) to indicate views? [te]
historySendingOutIconFg: pOrange; // [te]
historySystemBg: pYellow; // [te]
historySystemBgSelected: pOrange; // [te]
historySystemFg: pBg; // windowFgActive; [te]
historyTextInFg: windowFg;
historyTextOutFg: windowFg;
historyToDownBg: base01; // [te]
historyToDownShadow: cTransparent;
historyUnreadBarBg: pSelection;
historyUnreadBarBorder: pSelection;
historyUnreadBarFg: cWhite;

imageBg: cBlack; // ???
imageBgTransparent: cWhite; // ???

inputBorderFg: pComment; // Input text field undeline when not active

introBg: windowBg;
introCoverBottomBg: pBg; // [te]
introCoverIconsFg: pComment; // [te]
introCoverPlaneInner: pCyan; // [te]
introCoverPlaneOuter: pCyan; // [te]
introCoverPlaneTop: pCyan; // [te]
introCoverPlaneTrace: pCyan; // [te]
introCoverTopBg: pBg; // [te]
introDescriptionFg: windowSubTextFg;
introErrorFg: pRed; // [te]
introTitleFg: windowBoldFg;

layerBg: base01T; // bg overlay when menu is up [te]

mainMenuBg: menuBg;
mainMenuCoverBg: pSelection; // [te]
mainMenuCoverFg:  pSelectionFg; // [te]

mediaInFg: pOrange; // [te]
mediaInFgSelected: pOrange; // [te]
mediaOutFg: pOrange; // [te]
mediaOutFgSelected: pOrange; // [te]
mediaPlayerActiveFg: pGreen; // [te]
mediaPlayerBg:  pBg; //  [te]
mediaPlayerDisabledFg: pSelection; // [te]
mediaPlayerInactiveFg: pComment; // [te]
mediaviewBg: base01T; // [te]
mediaviewCaptionBg: pBg; //  [te]
mediaviewCaptionFg: cWhite;
mediaviewControlBg: pBg; //  [te]
mediaviewControlFg: pComment; // windowFgActive; [te]
mediaviewFileBg: pSelection; //  [te]
mediaviewFileBlueCornerFg: base0D; // [te]
mediaviewFileExtFg: pBg; // [te]
mediaviewFileGreenCornerFg: base0B; // [te]
mediaviewFileNameFg: windowFg;
mediaviewFileRedCornerFg: base08; // [te]
mediaviewFileSizeFg: pOrange; //windowSubTextFg; [te]
mediaviewFileYellowCornerFg: base0A; // [te]
mediaviewMenuBgOver: pSelection; // [te]
mediaviewMenuBg: pBg; // [te]
mediaviewMenuBgRipple: rippleBgLight; // [te]
mediaviewMenuFg: pFg; // windowFgActive; [te]
mediaviewPlaybackActiveOver: pGreen; // [te]
mediaviewPlaybackActive: pGreen; // [te]
mediaviewPlaybackIconFgOver: mediaviewPlaybackActiveOver;
mediaviewPlaybackIconFg: pComment; // [te]
mediaviewPlaybackInactiveOver: pComment; //windowSubTextFgOver; [te]
mediaviewPlaybackInactive: pSelection; //windowSubTextFg; [te]
mediaviewPlaybackProgressFg: pFg; // [te]
mediaviewSaveMsgBg: toastBg;
mediaviewSaveMsgFg: toastFg;
mediaviewTextLinkFg: pCyan; // [te]
mediaviewTransparentBg: cBlack; // [te]
mediaviewTransparentFg: base03; // [te]
mediaviewVideoBg: imageBg;

membersAboutLimitFg: pRed; // [te]

menuBgOver: pSelection; // Menu bg color on hover
menuBgRipple: windowBgRipple; // Icon ripple color
//menuBg: themixMENU_BG; // Menu bg color
menuBg: themixBG; // Menu bg color
menuFgDisabled: pComment; // Disabled menu text color
menuFg: themixMENU_FG; // Menu fg color
menuIconFgOver: pSelectionFg; // Menu Icon text color on hover
//menuIconFg: themixMENU_FG; // Menu Icon text color
menuIconFg: themixFG; // Menu Icon text color
menuSeparatorFg: pComment; // [te]
menuSubmenuArrowFg: pComment; // ???

msgBotKbIconFg: pBg; //  [te]
msgBotKbOverBgAdd: rippleBgLight; // [te]
msgBotKbRippleBg: activeButtonBgRipple; //menuBgRipple; // Bot (system) chat buttons [ie theme like/dislike]
msgDateImgBgOver: windowBgOver;
msgDateImgBgSelected: windowBgOver;
msgDateImgBg: windowBg;
msgDateImgFg: windowFg;
msgFile1BgDark: base0D; // [te]
msgFile1BgOver: base0D; // [te]
msgFile1Bg: pCyan; // [te]
msgFile1BgSelected: base0D; // [te]
msgFile2BgDark: base0B; // [te]
msgFile2BgOver: base0B; // [te]
msgFile2Bg: pGreen; // [te]
msgFile2BgSelected: base0B; // [te]
msgFile3BgDark: base08; // [te]
msgFile3BgOver: base08; // [te]
msgFile3Bg: pRed; // [te]
msgFile3BgSelected: base08; // [te]
msgFile4BgDark: base0A; // [te]
msgFile4BgOver: base0A; // [te]
msgFile4Bg: pYellow; // [te]
msgFile4BgSelected: base0A; // [te]
msgFileInBgOver: pFg; // [te]
msgFileInBg: pPink; // [te]
msgFileInBgSelected: pComment; // [te]
msgFileOutBg: base0D; // [te]
msgFileOutBgOver: pFg; // [te]
msgFileOutBgSelected: pSelection; //  [te]
msgFileThumbLinkInFg: pYellow; // [te]
msgFileThumbLinkInFgSelected: pComment; // [te]
msgFileThumbLinkOutFg: pYellow; // [te]
msgFileThumbLinkOutFgSelected: pComment; // [te]
msgImgReplyBarColor: activeLineFg;
msgInBgSelected: pPink;
msgInBg: themixTXT_BG;
msgInDateFg: base05; // Date in IN msg (text color) [ie time recieved] [te]
msgInDateFgSelected: base04; // msgInDateFG but when msg is selected [te]
msgInMonoFg: pOrange; // [te]
msgInReplyBarColor: activeLineFg;
msgInReplyBarSelColor: activeLineFg;
msgInServiceFgSelected: windowActiveTextFg; // msgInServiceFg when selected
msgInServiceFg: windowActiveTextFg; // Chat name color when system message in (ie the computer... Forwarded by, Channels, etc)
msgInShadow: cTransparent;
msgInShadowSelected: cTransparent;
msgOutBg: pSelection;
msgOutBgSelected: pPurple;
msgOutDateFg: base05; // Date in OUT msg (text color) [ie time sent] [te]
msgOutDateFgSelected: base04; // msgOutDateFG but when msg is selected [te]
msgOutMonoFg: pOrange; // [te]
msgOutReplyBarColor: activeLineFg;
msgOutReplyBarSelColor: activeLineFg;
msgOutServiceFgSelected: windowActiveTextFg; // msgOutServiceFg when selected
msgOutServiceFg: windowActiveTextFg; // msgInServiceFg but out instead
msgOutShadow: cTransparent;
msgOutShadowSelected: cTransparent;
msgSelectOverlay: base01T;
msgServiceBg: base0DT; // Sticker reply, dates in chat history, bot buttons [te]
msgServiceBgSelected: base0ET; // [te]
msgServiceFg: base01; // [te]
msgStickerOverlay: rippleBgHeavy;
msgWaveformInActive: pGreen; // Waveforms for audio messages (active is the played part)
msgWaveformInActiveSelected: pGreen;
msgWaveformInInactiveSelected: windowBg;
msgWaveformInInactive: windowBg;
msgWaveformOutActive: pGreen;
msgWaveformOutActiveSelected: pGreen;
msgWaveformOutInactiveSelected: windowBg;
msgWaveformOutInactive: windowBg;

notificationBg: windowBg;
notificationSampleCloseFg: pRed; // [te]
notificationSampleNameFg: pSelection; // [te]
notificationSampleTextFg: pFg; // [te]
notificationSampleUserpicFg:  pCyan; // [te]
notificationsBoxMonitorFg: windowFg;
notificationsBoxScreenBg: pSelection; // [te]

overviewCheckBg: cTransparent; // [te]
overviewCheckFgActive: pSelectionFg;
overviewCheckFg: pSelectionFg;
overviewPhotoSelectOverlay: rippleBgHeavy; // [te]

photoCropFadeBg: layerBg;
photoCropPointFg: pComment;

placeholderFgActive: pComment;
placeholderFg: pSelection; //windowSubTextFg; [te]

profileStatusFgOver: pPurple;
profileVerifiedCheckBg: pCyan; // [te]

radialBg: pSelection; // ??? [te]
radialFg: pSelectionFg; // ??? [te]

reportSpamBg: emojiPanHeaderBg;
reportSpamFg: windowFg;

scrollBarBgOver: pSelection; // Scroll Bar current slider color on hover
scrollBarBg: pButton; // Scroll Bar current slider color (indicator)
scrollBgOver: pComment; // Scroll Bar track bg color on hover
scrollBg: windowBg; // Scroll Bar track bg color

searchedBarBg: pBg; // Results & 'no msgs found' msg in search results [te]
searchedBarBorder: cTransparent; // [te]
searchedBarFg: pPink; // Text 'Search for messages' in search results. [te]

sliderBgActive: pGreen; // A slider is the bottom border on tabs that slides around
sliderBgInactive: pSelection; // windowBgActive;

smallCloseIconFgOver: pRed; // smallCloseIconFg on hover [te]
smallCloseIconFg: pComment; // Small menu close button color (its tiny)

stickerPanDeleteBg: base08T; // [te]
stickerPanDeleteFg: pRed; // windowFgActive; [te]
stickerPreviewBg: cTransparent;

//titleBg: themixHDR_BG; // Window top bar bg color
titleBg: windowBg; // Window top bar bg color
//titleFg: themixHDR_FG; // Window Title color
titleFg: windowFg; // Window Title color
titleBgActive: themixWM_BORDER_FOCUS; //  [te]
titleFgActive: pSelection; // Window Title color when active [te]
titleShadow: cTransparent;
titleButtonBg: cTransparent; // [te]
titleButtonFg: themixHDR_BTN_FG; // [te]
titleButtonBgActiveOver: pSelection; // [te]
titleButtonBgActive: themixHDR_BTN_BG; // [te]
titleButtonBgOver: cTransparent; // ??? [te]
titleButtonCloseBgActive: cTransparent; // [te]
titleButtonCloseBgActiveOver: pSelection; // [te]
titleButtonCloseBg: cTransparent; // [te]
titleButtonCloseBgOver: cTransparent; // ??? [te]
titleButtonCloseFgActiveOver: titleButtonCloseFgOver;
titleButtonCloseFgActive: pRed; // [te]
titleButtonCloseFgOver: pRed; // ??? [te]
titleButtonCloseFg: pSelection; // [te]
titleButtonFgActiveOver: pSelectionFg; // [te]
titleButtonFgActive: themixHDR_BTN_FG; // [te]
titleButtonFgOver: themixHDR_BTN_FG; // ??? [te]

toastBg: pComment; // [te]
toastFg: cWhite;

tooltipBg: menuBg; // [te]
tooltipBorderFg: cTransparent; // [te]
tooltipFg: menuFg; // [te]

topBarBg: titleBg;

trayCounterBgMacInvert: pComment; // ??? [te]
trayCounterBgMute: pBg; // ??? [te]
trayCounterBg: pRed; // Tray icon counter background for unread messages
trayCounterFgMacInvert: pFg; // ??? [te]
trayCounterFg: pFg; // ??? [te]

videoPlayIconBg: pComment; // [te]
videoPlayIconFg: pFg; // [te]

youtubePlayIconBg: pRed;
youtubePlayIconFg: pFg;
